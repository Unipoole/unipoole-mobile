"use strict";synthMobile.factory("SyncService",["$q","$timeout","SyncAPIService","DataService","LoggerService","UserSession","AppSyncStatus","SynthQLoop","SyncSelection",function(n,t,o,e,c,a,l,r,s){function u(){}var i=c("SyncService"),y=null;return u.prototype.getSyncDetails=function(){return o.getSyncStatus(a.activeModule)},u.prototype.syncDownloadTool=function(n){return o.syncDownloadTool(a.activeModule,n)},u.prototype.syncSelected=function(n){function t(){var n=null,t=y++;return t<l.length&&(n=u.syncDownloadTool(l[t].key).then(function(){i.debug("Completed download for tool : "+l[t].key),l[t].downloadProgress=100,"base"==l[t].key&&(s=!0)})),n}function e(){var n=null,t=d++;return t<a.length&&(n=u.syncUploadTool(a[t].key).then(function(){i.debug("Completed upload for tool : "+a[t].key),a[t].downloadProgress=100})),n}function c(){return o.getSyncStatusOffline()}var a=n.getUploadArray(),l=n.getDownloadArray(),s=!1,u=this,y=0,d=0;return r(t).then(function(){return r(e)}).then(c).then(function(){return{didUpdateBase:s}})},u.prototype.syncUploadTool=function(n){return o.syncUploadTool(a.activeModule,n)},u.prototype.startBackgroundSync=function(){var n=this;null==y?a.settings&&(a.settings.autoSyncDownload||a.settings.autoSyncUpload)?(i.debug("Starting background sync timer... "+a.settings.autoSyncInterval),y=t(function(){a.settings&&(a.settings.autoSyncDownload||a.settings.autoSyncUpload)&&n._handleTimedSync()},a.settings.autoSyncInterval)):i.debug("Not going to start sync, it is not enabled"):i.debug("Cannot start background sync again, already running...")},u.prototype._handleTimedSync=function(){i.debug("Need to check for sync now");var n=this;t.cancel(y),o.getSyncStatus().then(function(t){var o=s.newInstance();o.tools=t.tools,a.settings.autoSyncDownload&&o.selectAllDownloads(),a.settings.autoSyncUpload&&o.selectAllUploads(),n.syncSelected(o).then(function(){y=null,n.startBackgroundSync()})})},u.prototype.stopBackgroundSync=function(){i.debug("Stopping background sync timer..."),null!=y&&(t.cancel(y),y=null)},u.prototype.notifyChanges=function(n){l.tools[n].inSync=!1,l.inSync=!1,this._handleTimedSync()},new u}]);